// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contractYayoiFactory

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// YayoiFactoryCreateCollectionParams is an auto generated low-level Go binding around an user-defined struct.
type YayoiFactoryCreateCollectionParams struct {
	Name            string
	Symbol          string
	SystemPromptUri string
	PaymentToken    common.Address
	MinimumBidPrice *big.Int
	AuctionDuration uint64
}

// ContractYayoiFactoryMetaData contains all meta data concerning the ContractYayoiFactory contract.
var ContractYayoiFactoryMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"constructor\",\"inputs\":[{\"name\":\"_paymentToken\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"_creationPrice\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_baseMinimumBidPrice\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"_baseAuctionDuration\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"_protocolFeeDestination\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"nonpayable\"},{\"type\":\"receive\",\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"PROTOCOL_FEE_BPS\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"baseAuctionDuration\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"baseMinimumBidPrice\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"collectionImpl\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractYayoiCollection\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"createCollection\",\"inputs\":[{\"name\":\"params\",\"type\":\"tuple\",\"internalType\":\"structYayoiFactory.CreateCollectionParams\",\"components\":[{\"name\":\"name\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"systemPromptUri\",\"type\":\"string\",\"internalType\":\"string\"},{\"name\":\"paymentToken\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"minimumBidPrice\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"auctionDuration\",\"type\":\"uint64\",\"internalType\":\"uint64\"}]}],\"outputs\":[{\"name\":\"collection\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"stateMutability\":\"payable\"},{\"type\":\"function\",\"name\":\"creationPrice\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getCollectionFromSystemPromptUri\",\"inputs\":[{\"name\":\"systemPromptUri\",\"type\":\"string\",\"internalType\":\"string\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isAuthorizedSigner\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"isRegisteredCollection\",\"inputs\":[{\"name\":\"collection\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"owner\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"paymentToken\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"contractIERC20\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"protocolFeeDestination\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"registeredCollections\",\"inputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"renounceOwnership\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setBaseAuctionDuration\",\"inputs\":[{\"name\":\"duration\",\"type\":\"uint64\",\"internalType\":\"uint64\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setBaseMinimumBidPrice\",\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setCreationPrice\",\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setImplementation\",\"inputs\":[{\"name\":\"_implementation\",\"type\":\"address\",\"internalType\":\"addresspayable\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setPaymentToken\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"setProtocolFeeDestination\",\"inputs\":[{\"name\":\"destination\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"sweepTokens\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"transferOwnership\",\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"updateAuthorizedSigner\",\"inputs\":[{\"name\":\"signer\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"authorized\",\"type\":\"bool\",\"internalType\":\"bool\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"AuthorizedSignerUpdated\",\"inputs\":[{\"name\":\"signer\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"isAuthorized\",\"type\":\"bool\",\"indexed\":false,\"internalType\":\"bool\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"BaseAuctionDurationUpdated\",\"inputs\":[{\"name\":\"duration\",\"type\":\"uint64\",\"indexed\":false,\"internalType\":\"uint64\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"BaseMinimumBidPriceUpdated\",\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"CollectionCreated\",\"inputs\":[{\"name\":\"collection\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"owner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"CreationPriceUpdated\",\"inputs\":[{\"name\":\"price\",\"type\":\"uint256\",\"indexed\":false,\"internalType\":\"uint256\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"OwnershipTransferred\",\"inputs\":[{\"name\":\"previousOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"},{\"name\":\"newOwner\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"PaymentTokenUpdated\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"ProtocolFeeDestinationUpdated\",\"inputs\":[{\"name\":\"destination\",\"type\":\"address\",\"indexed\":true,\"internalType\":\"address\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"SystemPromptUriHashRegistered\",\"inputs\":[{\"name\":\"promptUriHash\",\"type\":\"bytes32\",\"indexed\":true,\"internalType\":\"bytes32\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"FailedDeployment\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"InsufficientBalance\",\"inputs\":[{\"name\":\"balance\",\"type\":\"uint256\",\"internalType\":\"uint256\"},{\"name\":\"needed\",\"type\":\"uint256\",\"internalType\":\"uint256\"}]},{\"type\":\"error\",\"name\":\"OwnableInvalidOwner\",\"inputs\":[{\"name\":\"owner\",\"type\":\"address\",\"internalType\":\"address\"}]},{\"type\":\"error\",\"name\":\"OwnableUnauthorizedAccount\",\"inputs\":[{\"name\":\"account\",\"type\":\"address\",\"internalType\":\"address\"}]},{\"type\":\"error\",\"name\":\"SafeERC20FailedOperation\",\"inputs\":[{\"name\":\"token\",\"type\":\"address\",\"internalType\":\"address\"}]}]",
	Bin: "0x608060405234801561001057600080fd5b506040516149fa3803806149fa83398101604081905261002f91610183565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e8161010a565b50600380546001600160a01b038088166001600160a01b03199283161790925560048690556005859055600680546001600160401b0386166001600160401b031990911617905560028054928416929091169190911790556040516100c29061015a565b604051809103906000f0801580156100de573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b0392909216919091179055506101ea9350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61358a8061147083390190565b80516001600160a01b038116811461017e57600080fd5b919050565b600080600080600060a0868803121561019b57600080fd5b6101a486610167565b60208701516040880151606089015192975090955093506001600160401b03811681146101d057600080fd5b91506101de60808701610167565b90509295509295909350565b611277806101f96000396000f3fe6080604052600436106101445760003560e01c8063715018a6116100b6578063bbaea2101161006f578063bbaea210146103d0578063be378228146103f0578063d784d42614610406578063e1456c6214610426578063f2fde38b14610446578063f5f6d3af1461046657600080fd5b8063715018a61461032a5780637eedf4d01461033f57806382413546146103525780638da5cb5b14610372578063a10786b014610390578063a9831437146103b057600080fd5b80633166ef01116101085780633166ef011461024c57806342cdddcb1461026c57806348b7bf2d146102a457806349045e16146102ba5780634ce7957c146102ea5780636a326ab11461030a57600080fd5b80630d8264c114610150578063176d64261461019557806320488262146101b75780633000186b146101db5780633013ce291461021457600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061018061016b366004610e70565b60086020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101a157600080fd5b506101b56101b0366004610e8d565b610486565b005b3480156101c357600080fd5b506101cd60045481565b60405190815260200161018c565b3480156101e757600080fd5b506101806101f6366004610e70565b6001600160a01b031660009081526008602052604090205460ff1690565b34801561022057600080fd5b50600354610234906001600160a01b031681565b6040516001600160a01b03909116815260200161018c565b34801561025857600080fd5b50600154610234906001600160a01b031681565b34801561027857600080fd5b5060065461028c906001600160401b031681565b6040516001600160401b03909116815260200161018c565b3480156102b057600080fd5b506101cd60055481565b3480156102c657600080fd5b506101806102d5366004610e70565b60076020526000908152604090205460ff1681565b3480156102f657600080fd5b50600254610234906001600160a01b031681565b34801561031657600080fd5b506101b5610325366004610e70565b6104ca565b34801561033657600080fd5b506101b561051c565b61023461034d366004610f88565b610530565b34801561035e57600080fd5b506101b561036d366004611079565b610762565b34801561037e57600080fd5b506000546001600160a01b0316610234565b34801561039c57600080fd5b506101b56103ab366004610e70565b610810565b3480156103bc57600080fd5b506101b56103cb366004610e8d565b6108ae565b3480156103dc57600080fd5b506102346103eb3660046110b7565b6108eb565b3480156103fc57600080fd5b506101cd6103e881565b34801561041257600080fd5b506101b5610421366004610e70565b610977565b34801561043257600080fd5b506101b56104413660046110f3565b6109f0565b34801561045257600080fd5b506101b5610461366004610e70565b610a47565b34801561047257600080fd5b506101b5610481366004610e70565b610a85565b61048e610bac565b60058190556040518181527f4a19594c5bed17b3f8f257b7692c14d958a042cb947d6319bc1856b5d1cefb26906020015b60405180910390a150565b6104d2610bac565b600380546001600160a01b0319166001600160a01b0383169081179091556040517fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd91390600090a250565b610524610bac565b61052e6000610bd9565b565b60065460a08201516000916001600160401b039081169116101561059b5760405162461bcd60e51b815260206004820152601f60248201527f4c657373207468616e20626173652061756374696f6e206475726174696f6e0060448201526064015b60405180910390fd5b6003546001600160a01b0316156105d0576004546003546105cb916001600160a01b039091169033903090610c29565b610619565b6004543410156106195760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b6044820152606401610592565b6040820151805160209091012060015461063c906001600160a01b031682610c96565b9150816001600160a01b03166395e49c7c6040518061010001604052808660000151815260200186602001518152602001306001600160a01b03168152602001336001600160a01b031681526020018660400151815260200186606001516001600160a01b03168152602001866080015181526020018660a001516001600160401b03168152506040518263ffffffff1660e01b81526004016106df9190611154565b600060405180830381600087803b1580156106f957600080fd5b505af115801561070d573d6000803e3d6000fd5b5050506001600160a01b038316600081815260086020526040808220805460ff19166001179055513393507f5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c79190a350919050565b61076a610bac565b6001600160a01b0382166107b15760405162461bcd60e51b815260206004820152600e60248201526d24b73b30b634b21039b4b3b732b960911b6044820152606401610592565b6001600160a01b038216600081815260076020908152604091829020805460ff191685151590811790915591519182527ffc434b0362aed83a09eb9c1e156519bbaa55c1a15933f661daad7a1394360472910160405180910390a25050565b610818610bac565b6001600160a01b0381166108645760405162461bcd60e51b815260206004820152601360248201527224b73b30b634b2103232b9ba34b730ba34b7b760691b6044820152606401610592565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f4907155279818c6a4cc7f8cd1dfc9ddd3d180b957ddd9ca2838c3fb3dc4cedb490600090a250565b6108b6610bac565b60048190556040518181527f3f961fcadef1ec878b072f0c7a89254eaf10e83b27750595b267d4285f619667906020016104bf565b8051602082012060015460009190829061090e906001600160a01b031683610ca4565b6001600160a01b03811660009081526008602052604090205490915060ff166109705760405162461bcd60e51b815260206004820152601460248201527310dbdb1b1958dd1a5bdb881b9bdd08199bdd5b9960621b6044820152606401610592565b9392505050565b61097f610bac565b6001600160a01b0381166109ce5760405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21034b6b83632b6b2b73a30ba34b7b760511b6044820152606401610592565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6109f8610bac565b6006805467ffffffffffffffff19166001600160401b0383169081179091556040519081527f56e16330d5194504fc5302c7809ed5e01f2da45dfea33ce0f9895356c0d73614906020016104bf565b610a4f610bac565b6001600160a01b038116610a7957604051631e4fbdf760e01b815260006004820152602401610592565b610a8281610bd9565b50565b610a8d610bac565b6001600160a01b038116610b2d57604051600090339047908381818185875af1925050503d8060008114610add576040519150601f19603f3d011682016040523d82523d6000602084013e610ae2565b606091505b5050905080610b295760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610592565b5050565b6040516370a0823160e01b8152306004820152610a829033906001600160a01b038416906370a0823190602401602060405180830381865afa158015610b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9b9190611228565b6001600160a01b0384169190610d0d565b6000546001600160a01b0316331461052e5760405163118cdaa760e01b8152336004820152602401610592565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b038481166024830152838116604483015260648201839052610c909186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610d43565b50505050565b600061097083836000610db4565b6040513060388201526f5af43d82803e903d91602b57fd5bf3ff602482015260148101839052733d602d80600a3d3981f3363d3d373d3d3d363d738152605881018290526037600c820120607882015260556043909101206000906001600160a01b0316610970565b6040516001600160a01b03838116602483015260448201839052610d3e91859182169063a9059cbb90606401610c5e565b505050565b600080602060008451602086016000885af180610d66576040513d6000823e3d81fd5b50506000513d91508115610d7e578060011415610d8b565b6001600160a01b0384163b155b15610c9057604051635274afe760e01b81526001600160a01b0385166004820152602401610592565b600081471015610de05760405163cf47918160e01b815247600482015260248101839052604401610592565b763d602d80600a3d3981f3363d3d373d3d3d363d730000008460601b60e81c176000526e5af43d82803e903d91602b57fd5bf38460781b17602052826037600984f590506001600160a01b0381166109705760405163b06ebf3d60e01b815260040160405180910390fd5b6001600160a01b0381168114610a8257600080fd5b8035610e6b81610e4b565b919050565b600060208284031215610e8257600080fd5b813561097081610e4b565b600060208284031215610e9f57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715610ede57610ede610ea6565b60405290565b600082601f830112610ef557600080fd5b81356001600160401b03811115610f0e57610f0e610ea6565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610f3c57610f3c610ea6565b604052818152838201602001851015610f5457600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160401b0381168114610e6b57600080fd5b600060208284031215610f9a57600080fd5b81356001600160401b03811115610fb057600080fd5b820160c08185031215610fc257600080fd5b610fca610ebc565b81356001600160401b03811115610fe057600080fd5b610fec86828501610ee4565b82525060208201356001600160401b0381111561100857600080fd5b61101486828501610ee4565b60208301525060408201356001600160401b0381111561103357600080fd5b61103f86828501610ee4565b60408301525061105160608301610e60565b60608201526080828101359082015261106c60a08301610f71565b60a0820152949350505050565b6000806040838503121561108c57600080fd5b823561109781610e4b565b9150602083013580151581146110ac57600080fd5b809150509250929050565b6000602082840312156110c957600080fd5b81356001600160401b038111156110df57600080fd5b6110eb84828501610ee4565b949350505050565b60006020828403121561110557600080fd5b61097082610f71565b6000815180845260005b8181101561113457602081850181015186830182015201611118565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251610100602084015261117261012084018261110e565b90506020840151601f1984830301604085015261118f828261110e565b91505060408401516111ac60608501826001600160a01b03169052565b5060608401516001600160a01b0381166080850152506080840151838203601f190160a08501526111dd828261110e565b91505060a08401516111fa60c08501826001600160a01b03169052565b5060c084015160e084015260e08401516112206101008501826001600160401b03169052565b509392505050565b60006020828403121561123a57600080fd5b505191905056fea2646970667358221220ccb57d8cc99e41df45f4107a67601a6c31f4b22c0d74c82a6093ea3521fe8a5664736f6c634300081b00336080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6134b1806100d96000396000f3fe6080604052600436106102345760003560e01c80638456cb591161012e578063b3311086116100ab578063ea8a8a2a1161006f578063ea8a8a2a146106bd578063f2fde38b146106d2578063f3f43703146106f2578063f5f6d3af1461071f578063f698da251461073f57600080fd5b8063b33110861461061d578063b88d4fde1461063d578063c45a01551461065d578063c87b56dd1461067d578063e985e9c51461069d57600080fd5b806395d89b41116100f257806395d89b41146105a057806395e49c7c146105b5578063a22cb465146105d5578063a64604df146105f5578063ac08121a1461060a57600080fd5b80638456cb59146104e657806384b0196e146104fb5780638da5cb5b14610523578063919e84f514610560578063930e79f11461058057600080fd5b80633013ce29116101bc57806370a082311161018057806370a082311461044e578063715018a61461046e57806375794a3c1461048357806377b5717f1461049957806378bd7935146104b957600080fd5b80633013ce29146103a957806342842e0e146103c95780635c975abb146103e95780636352211e1461040e57806366ef1d701461042e57600080fd5b80630b0ee90f116102035780630b0ee90f146102f15780630cbf54c814610315578063157db3161461035457806316d5c3a41461036957806323b872dd1461038957600080fd5b806301ffc9a71461024057806306fdde0314610275578063081812fc14610297578063095ea7b3146102cf57600080fd5b3661023b57005b600080fd5b34801561024c57600080fd5b5061026061025b366004612b29565b610754565b60405190151581526020015b60405180910390f35b34801561028157600080fd5b5061028a61077f565b60405161026c9190612b96565b3480156102a357600080fd5b506102b76102b2366004612ba9565b610823565b6040516001600160a01b03909116815260200161026c565b3480156102db57600080fd5b506102ef6102ea366004612bde565b610838565b005b3480156102fd57600080fd5b5061030760045481565b60405190815260200161026c565b34801561032157600080fd5b5060055461033c90600160401b90046001600160401b031681565b6040516001600160401b03909116815260200161026c565b34801561036057600080fd5b50610307610847565b34801561037557600080fd5b506102ef610384366004612cdb565b610879565b34801561039557600080fd5b506102ef6103a4366004612d4b565b610b8b565b3480156103b557600080fd5b506003546102b7906001600160a01b031681565b3480156103d557600080fd5b506102ef6103e4366004612d4b565b610c16565b3480156103f557600080fd5b5060008051602061345c8339815191525460ff16610260565b34801561041a57600080fd5b506102b7610429366004612ba9565b610c36565b34801561043a57600080fd5b50610307610449366004612ba9565b610c41565b34801561045a57600080fd5b50610307610469366004612d88565b610c6e565b34801561047a57600080fd5b506102ef610cca565b34801561048f57600080fd5b5061030760005481565b3480156104a557600080fd5b506102ef6104b4366004612ba9565b610cde565b3480156104c557600080fd5b506104d96104d4366004612ba9565b610de8565b60405161026c9190612da3565b3480156104f257600080fd5b506102ef610ef1565b34801561050757600080fd5b50610510610f01565b60405161026c9796959493929190612de6565b34801561052f57600080fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102b7565b34801561056c57600080fd5b5061030761057b366004612ba9565b610fad565b34801561058c57600080fd5b5061030761059b366004612ba9565b610fe3565b3480156105ac57600080fd5b5061028a61100e565b3480156105c157600080fd5b506102ef6105d0366004612e95565b61104d565b3480156105e157600080fd5b506102ef6105f0366004612fb7565b611333565b34801561060157600080fd5b5061028a61133e565b6102ef610618366004612fee565b6113cc565b34801561062957600080fd5b5060055461033c906001600160401b031681565b34801561064957600080fd5b506102ef61065836600461303e565b61161c565b34801561066957600080fd5b506001546102b7906001600160a01b031681565b34801561068957600080fd5b5061028a610698366004612ba9565b611634565b3480156106a957600080fd5b506102606106b83660046130a5565b611769565b3480156106c957600080fd5b506102ef6117b6565b3480156106de57600080fd5b506102ef6106ed366004612d88565b611838565b3480156106fe57600080fd5b5061030761070d366004612d88565b60076020526000908152604090205481565b34801561072b57600080fd5b506102ef61073a366004612d88565b611873565b34801561074b57600080fd5b50610307611885565b60006001600160e01b03198216632483248360e11b148061077957506107798261188f565b92915050565b60008051602061341c833981519152805460609190819061079f906130d8565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb906130d8565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b505050505091505090565b600061082e826118df565b5061077982611917565b610843828233611951565b5050565b6005546000906001600160401b03600160401b820481169161086a911642613128565b610874919061313b565b905090565b61088283610fe3565b4210156108cd5760405162461bcd60e51b815260206004820152601460248201527341756374696f6e207374696c6c2061637469766560601b60448201526064015b60405180910390fd5b6000838152600660205260409020805460ff161561092d5760405162461bcd60e51b815260206004820152601860248201527f41756374696f6e20616c72656164792066696e6973686564000000000000000060448201526064016108c4565b805461010090046001600160a01b031661097a5760405162461bcd60e51b815260206004820152600e60248201526d139bc8189a591cc81c1b1858d95960921b60448201526064016108c4565b805460ff1916600190811782556000549061099690829061315d565b600090815582548551602080880191909120604080517fe9aa4d8bde8520de6be09af9531c3c7a60b27652e97c391f8f8d7b7cdca1f6f6818501526101009094046001600160a01b031684820152606080850192909252805180850390920182526080909301909252815191012090610a0e8261195e565b90506000610a1c828761198b565b6001546040516324822f0b60e11b81526001600160a01b0380841660048301529293509116906349045e1690602401602060405180830381865afa158015610a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8c9190613170565b610acc5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b60448201526064016108c4565b8454610ae69061010090046001600160a01b0316856119b5565b610af084886119cf565b60006127106103e88760010154610b07919061318d565b610b11919061313b565b600354600154919250610b31916001600160a01b03918216911683611a42565b85546040516101009091046001600160a01b0316908a907f14bfb274a337f9408e9193eb4f20a1b3a0df509ad4a3c2e624147d7967f27aea90610b789060028b01906131a4565b60405180910390a3505050505050505050565b6001600160a01b038216610bb557604051633250574960e11b8152600060048201526024016108c4565b6000610bc2838333611afd565b9050836001600160a01b0316816001600160a01b031614610c10576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016108c4565b50505050565b610c318383836040518060200160405280600081525061161c565b505050565b6000610779826118df565b6005546000906001600160401b03600160401b8204811691610c64911684613128565b610779919061313b565b600060008051602061341c8339815191526001600160a01b038316610ca9576040516322718ad960e21b8152600060048201526024016108c4565b6001600160a01b039092166000908152600390920160205250604090205490565b610cd2611c07565b610cdc6000611c62565b565b610ce6611c07565b600160009054906101000a90046001600160a01b03166001600160a01b03166348b7bf2d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5d9190613230565b811015610dac5760405162461bcd60e51b815260206004820181905260248201527f4c657373207468616e2062617365206d696e696d756d2062696420707269636560448201526064016108c4565b60048190556040518181527f4e1604effc0bf569150bff6c299be65828d46873b5ea1764ea94eb121ce5125d906020015b60405180910390a150565b60408051608081018252600080825260208201819052918101919091526060808201526000828152600660209081526040918290208251608081018452815460ff81161515825261010090046001600160a01b031692810192909252600181015492820192909252600282018054919291606084019190610e68906130d8565b80601f0160208091040260200160405190810160405280929190818152602001828054610e94906130d8565b8015610ee15780601f10610eb657610100808354040283529160200191610ee1565b820191906000526020600020905b815481529060010190602001808311610ec457829003601f168201915b5050505050815250509050919050565b610ef9611c07565b610cdc611cd3565b6000606080828080838160008051602061343c8339815191528054909150158015610f2e57506001810154155b610f725760405162461bcd60e51b81526020600482015260156024820152741152540dcc4c8e88155b9a5b9a5d1a585b1a5e9959605a1b60448201526064016108c4565b610f7a611d25565b610f82611d64565b60408051600080825260208201909252600f60f81b9c939b5091995046985030975095509350915050565b600554600090610fcd90600160401b90046001600160401b03168361318d565b60055461077991906001600160401b031661315d565b600554600090600160401b90046001600160401b031661100483600161315d565b610fcd919061318d565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079301805460609160008051602061341c8339815191529161079f906130d8565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156110925750825b90506000826001600160401b031660011480156110ae5750303b155b9050811580156110bc575080155b156110da5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561110457845460ff60401b1916600160401b1785555b60408601516001600160a01b03166111505760405162461bcd60e51b815260206004820152600f60248201526e496e76616c696420666163746f727960881b60448201526064016108c4565b60008660e001516001600160401b0316116111ad5760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642061756374696f6e206475726174696f6e000000000000000060448201526064016108c4565b6111bf86600001518760200151611da3565b6111c7611db5565b6111d48660600151611dbd565b6111fb8660000151604051806040016040528060018152602001603160f81b815250611dce565b611203611de0565b6040860151600180546001600160a01b0319166001600160a01b0390921691909117905560808601516002906112399082613290565b5060a0860151600380546001600160a01b0319166001600160a01b03831617905560c0870151600481905560e0880151600580546fffffffffffffffffffffffffffffffff1916600160401b6001600160401b039384160267ffffffffffffffff191617429290921691909117905560808801516040517f9a1599fac5fb12681972e8b6b9adf6db5a43b68d23cf37343265e50b6694be71936112dd93909161334e565b60405180910390a1831561132b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b610843338383611df0565b6002805461134b906130d8565b80601f0160208091040260200160405190810160405280929190818152602001828054611377906130d8565b80156113c45780601f10611399576101008083540402835291602001916113c4565b820191906000526020600020905b8154815290600101906020018083116113a757829003601f168201915b505050505081565b6113d4611ea1565b6113dc610847565b831461141f5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908185d58dd1a5bdb88125160721b60448201526064016108c4565b60045481101561145f5760405162461bcd60e51b815260206004820152600b60248201526a42696420746f6f206c6f7760a81b60448201526064016108c4565b6000838152600660205260409020805461010090046001600160a01b03166114bc57837fb2b65ce77efcb926ee7a9434657c8340c1d173f2ce383af15a848762f102e7c6426040516114b391815260200190565b60405180910390a25b805460018201546101009091046001600160a01b0316908084116115165760405162461bcd60e51b8152602060048201526011602482015270139bdd0818481dda5b9b9a5b99c8189a59607a1b60448201526064016108c4565b801561154a576001600160a01b0382166000908152600760205260408120805483929061154490849061315d565b90915550505b8254610100600160a81b031916336101000217835560018301849055600283016115748682613290565b50604051848152339087907f797a600a7a69cc689dfcf3cce3bbd5355eb2ddbc787796974cb4c4bedfd8625c9060200160405180910390a333600090815260076020526040902054808511156115f857336000908152600760205260408120556003546115f3906001600160a01b03166115ee8388613128565b611ed2565b611613565b6116028582613128565b336000908152600760205260409020555b50505050505050565b611627848484610b8b565b610c103385858585611f38565b60607f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e7900611660836118df565b506000838152602082905260408120805461167a906130d8565b80601f01602080910402602001604051908101604052809291908181526020018280546116a6906130d8565b80156116f35780601f106116c8576101008083540402835291602001916116f3565b820191906000526020600020905b8154815290600101906020018083116116d657829003601f168201915b50505050509050600061171160408051602081019091526000815290565b9050805160000361172457509392505050565b81511561175757808260405160200161173e92919061337c565b6040516020818303038152906040529350505050919050565b61176085612061565b95945050505050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b336000908152600760205260409020548061180c5760405162461bcd60e51b81526020600482015260166024820152754e6f2070656e64696e67207769746864726177616c7360501b60448201526064016108c4565b33600081815260076020526040812055600354611835916001600160a01b039091169083611a42565b50565b611840611c07565b6001600160a01b03811661186a57604051631e4fbdf760e01b8152600060048201526024016108c4565b61183581611c62565b61187b611c07565b61183581336120d6565b6000610874612204565b60006001600160e01b031982166380ac58cd60e01b14806118c057506001600160e01b03198216635b5e139f60e01b145b8061077957506301ffc9a760e01b6001600160e01b0319831614610779565b6000806118eb8361220e565b90506001600160a01b03811661077957604051637e27328960e01b8152600481018490526024016108c4565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b610c318383836001612248565b600061077961196b612204565b8360405161190160f01b8152600281019290925260228201526042902090565b60008060008061199b868661235e565b9250925092506119ab82826123ab565b5090949350505050565b610843828260405180602001604052806000815250612464565b60008281527f0542a41881ee128a365a727b282c86fa859579490b9bb45aab8503648c8e790060208190526040909120611a098382613290565b506040518381527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a1505050565b6001600160a01b038316611ae9576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611a9d576040519150601f19603f3d011682016040523d82523d6000602084013e611aa2565b606091505b5050905080610c105760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b60448201526064016108c4565b610c316001600160a01b038416838361247c565b600060008051602061341c83398151915281611b188561220e565b90506001600160a01b03841615611b3457611b348185876124db565b6001600160a01b03811615611b7457611b51600086600080612248565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b03861615611ba5576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b33611c397f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610cdc5760405163118cdaa760e01b81523360048201526024016108c4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b611cdb611ea1565b60008051602061345c833981519152805460ff191660011781556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610ddd565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d102805460609160008051602061343c8339815191529161079f906130d8565b7fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d103805460609160008051602061343c8339815191529161079f906130d8565b611dab61253f565b6108438282612588565b610cdc61253f565b611dc561253f565b611835816125b9565b611dd661253f565b61084382826125c1565b611de861253f565b610cdc612622565b60008051602061341c8339815191526001600160a01b038316611e3157604051630b61174360e31b81526001600160a01b03841660048201526024016108c4565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b60008051602061345c8339815191525460ff1615610cdc5760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b038216611f2357803410156108435760405162461bcd60e51b815260206004820152601060248201526f092dce6eaccccd2c6d2cadce8408aa8960831b60448201526064016108c4565b6108436001600160a01b038316333084612643565b6001600160a01b0383163b1561205a57604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611f7a9088908890879087906004016133ab565b6020604051808303816000875af1925050508015611fb5575060408051601f3d908101601f19168201909252611fb2918101906133e8565b60015b61201e573d808015611fe3576040519150601f19603f3d011682016040523d82523d6000602084013e611fe8565b606091505b50805160000361201657604051633250574960e11b81526001600160a01b03851660048201526024016108c4565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461132b57604051633250574960e11b81526001600160a01b03851660048201526024016108c4565b5050505050565b606061206c826118df565b50600061208460408051602081019091526000815290565b905060008151116120a457604051806020016040528060008152506120cf565b806120ae8461267c565b6040516020016120bf92919061337c565b6040516020818303038152906040525b9392505050565b6120de611c07565b6001600160a01b038216612185576000816001600160a01b03164760405160006040518083038185875af1925050503d8060008114612139576040519150601f19603f3d011682016040523d82523d6000602084013e61213e565b606091505b5050905080610c315760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b60448201526064016108c4565b6040516370a0823160e01b81523060048201526108439082906001600160a01b038516906370a0823190602401602060405180830381865afa1580156121cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f39190613230565b6001600160a01b038516919061247c565b600061087461270e565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b60008051602061341c833981519152818061226b57506001600160a01b03831615155b1561232d57600061227b856118df565b90506001600160a01b038416158015906122a75750836001600160a01b0316816001600160a01b031614155b80156122ba57506122b88185611769565b155b156122e35760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016108c4565b821561232b5784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b600080600083516041036123985760208401516040850151606086015160001a61238a88828585612782565b9550955095505050506123a4565b50508151600091506002905b9250925092565b60008260038111156123bf576123bf613405565b036123c8575050565b60018260038111156123dc576123dc613405565b036123fa5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561240e5761240e613405565b0361242f5760405163fce698f760e01b8152600481018290526024016108c4565b600382600381111561244357612443613405565b03610843576040516335e2f38360e21b8152600481018290526024016108c4565b61246e8383612851565b610c31336000858585611f38565b6040516001600160a01b03838116602483015260448201839052610c3191859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506128b6565b6124e6838383612927565b610c31576001600160a01b03831661251457604051637e27328960e01b8152600481018290526024016108c4565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016108c4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610cdc57604051631afcd79f60e31b815260040160405180910390fd5b61259061253f565b60008051602061341c833981519152806125aa8482613290565b5060018101610c108382613290565b61184061253f565b6125c961253f565b60008051602061343c8339815191527fa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d1026126038482613290565b50600381016126128382613290565b5060008082556001909101555050565b61262a61253f565b60008051602061345c833981519152805460ff19169055565b6040516001600160a01b038481166024830152838116604483015260648201839052610c109186918216906323b872dd906084016124a9565b606060006126898361298d565b60010190506000816001600160401b038111156126a8576126a8612c08565b6040519080825280601f01601f1916602001820160405280156126d2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846126dc57509392505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f612739612a65565b612741612acf565b60408051602081019490945283019190915260608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411156127bd5750600091506003905082612847565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015612811573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661283d57506000925060019150829050612847565b9250600091508190505b9450945094915050565b6001600160a01b03821661287b57604051633250574960e11b8152600060048201526024016108c4565b600061288983836000611afd565b90506001600160a01b03811615610c31576040516339e3563760e11b8152600060048201526024016108c4565b600080602060008451602086016000885af1806128d9576040513d6000823e3d81fd5b50506000513d915081156128f15780600114156128fe565b6001600160a01b0384163b155b15610c1057604051635274afe760e01b81526001600160a01b03851660048201526024016108c4565b60006001600160a01b038316158015906129855750826001600160a01b0316846001600160a01b0316148061296157506129618484611769565b806129855750826001600160a01b031661297a83611917565b6001600160a01b0316145b949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106129cc5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106129f8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310612a1657662386f26fc10000830492506010015b6305f5e1008310612a2e576305f5e100830492506008015b6127108310612a4257612710830492506004015b60648310612a54576064830492506002015b600a83106107795760010192915050565b600060008051602061343c83398151915281612a7f611d25565b805190915015612a9757805160209091012092915050565b81548015612aa6579392505050565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470935050505090565b600060008051602061343c83398151915281612ae9611d64565b805190915015612b0157805160209091012092915050565b60018201548015612aa6579392505050565b6001600160e01b03198116811461183557600080fd5b600060208284031215612b3b57600080fd5b81356120cf81612b13565b60005b83811015612b61578181015183820152602001612b49565b50506000910152565b60008151808452612b82816020860160208601612b46565b601f01601f19169290920160200192915050565b6020815260006120cf6020830184612b6a565b600060208284031215612bbb57600080fd5b5035919050565b80356001600160a01b0381168114612bd957600080fd5b919050565b60008060408385031215612bf157600080fd5b612bfa83612bc2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405161010081016001600160401b0381118282101715612c4157612c41612c08565b60405290565b600082601f830112612c5857600080fd5b8135602083016000806001600160401b03841115612c7857612c78612c08565b50604051601f19601f85018116603f011681018181106001600160401b0382111715612ca657612ca6612c08565b604052838152905080828401871015612cbe57600080fd5b838360208301376000602085830101528094505050505092915050565b600080600060608486031215612cf057600080fd5b8335925060208401356001600160401b03811115612d0d57600080fd5b612d1986828701612c47565b92505060408401356001600160401b03811115612d3557600080fd5b612d4186828701612c47565b9150509250925092565b600080600060608486031215612d6057600080fd5b612d6984612bc2565b9250612d7760208501612bc2565b929592945050506040919091013590565b600060208284031215612d9a57600080fd5b6120cf82612bc2565b6020815281511515602082015260018060a01b036020830151166040820152604082015160608201526000606083015160808084015261298560a0840182612b6a565b60ff60f81b8816815260e060208201526000612e0560e0830189612b6a565b8281036040840152612e178189612b6a565b606084018890526001600160a01b038716608085015260a0840186905283810360c08501528451808252602080870193509091019060005b81811015612e6d578351835260209384019390920191600101612e4f565b50909b9a5050505050505050505050565b80356001600160401b0381168114612bd957600080fd5b600060208284031215612ea757600080fd5b81356001600160401b03811115612ebd57600080fd5b82016101008185031215612ed057600080fd5b612ed8612c1e565b81356001600160401b03811115612eee57600080fd5b612efa86828501612c47565b82525060208201356001600160401b03811115612f1657600080fd5b612f2286828501612c47565b602083015250612f3460408301612bc2565b6040820152612f4560608301612bc2565b606082015260808201356001600160401b03811115612f6357600080fd5b612f6f86828501612c47565b608083015250612f8160a08301612bc2565b60a082015260c08281013590820152612f9c60e08301612e7e565b60e0820152949350505050565b801515811461183557600080fd5b60008060408385031215612fca57600080fd5b612fd383612bc2565b91506020830135612fe381612fa9565b809150509250929050565b60008060006060848603121561300357600080fd5b8335925060208401356001600160401b0381111561302057600080fd5b61302c86828701612c47565b93969395505050506040919091013590565b6000806000806080858703121561305457600080fd5b61305d85612bc2565b935061306b60208601612bc2565b92506040850135915060608501356001600160401b0381111561308d57600080fd5b61309987828801612c47565b91505092959194509250565b600080604083850312156130b857600080fd5b6130c183612bc2565b91506130cf60208401612bc2565b90509250929050565b600181811c908216806130ec57607f821691505b60208210810361310c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561077957610779613112565b60008261315857634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561077957610779613112565b60006020828403121561318257600080fd5b81516120cf81612fa9565b808202811582820484141761077957610779613112565b6020815260008083546131b6816130d8565b80602086015260018216600081146131d557600181146131f157613225565b60ff1983166040870152604082151560051b8701019350613225565b86600052602060002060005b8381101561321c578154888201604001526001909101906020016131fd565b87016040019450505b509195945050505050565b60006020828403121561324257600080fd5b5051919050565b601f821115610c3157806000526020600020601f840160051c810160208510156132705750805b601f840160051c820191505b8181101561205a576000815560010161327c565b81516001600160401b038111156132a9576132a9612c08565b6132bd816132b784546130d8565b84613249565b6020601f8211600181146132f157600083156132d95750848201515b600019600385901b1c1916600184901b17845561205a565b600084815260208120601f198516915b828110156133215787850151825560209485019460019092019101613301565b508482101561333f5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6060815260006133616060830186612b6a565b6001600160a01b039490941660208301525060400152919050565b6000835161338e818460208801612b46565b8351908301906133a2818360208801612b46565b01949350505050565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906133de90830184612b6a565b9695505050505050565b6000602082840312156133fa57600080fd5b81516120cf81612b13565b634e487b7160e01b600052602160045260246000fdfe80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300a16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220be395a0400efdace2e4de21d8e2fd958c08f9f2ee53e1f882bc1e303493f706464736f6c634300081b0033",
}

// ContractYayoiFactoryABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractYayoiFactoryMetaData.ABI instead.
var ContractYayoiFactoryABI = ContractYayoiFactoryMetaData.ABI

// ContractYayoiFactoryBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractYayoiFactoryMetaData.Bin instead.
var ContractYayoiFactoryBin = ContractYayoiFactoryMetaData.Bin

// DeployContractYayoiFactory deploys a new Ethereum contract, binding an instance of ContractYayoiFactory to it.
func DeployContractYayoiFactory(auth *bind.TransactOpts, backend bind.ContractBackend, _paymentToken common.Address, _creationPrice *big.Int, _baseMinimumBidPrice *big.Int, _baseAuctionDuration uint64, _protocolFeeDestination common.Address) (common.Address, *types.Transaction, *ContractYayoiFactory, error) {
	parsed, err := ContractYayoiFactoryMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractYayoiFactoryBin), backend, _paymentToken, _creationPrice, _baseMinimumBidPrice, _baseAuctionDuration, _protocolFeeDestination)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &ContractYayoiFactory{ContractYayoiFactoryCaller: ContractYayoiFactoryCaller{contract: contract}, ContractYayoiFactoryTransactor: ContractYayoiFactoryTransactor{contract: contract}, ContractYayoiFactoryFilterer: ContractYayoiFactoryFilterer{contract: contract}}, nil
}

// ContractYayoiFactory is an auto generated Go binding around an Ethereum contract.
type ContractYayoiFactory struct {
	ContractYayoiFactoryCaller     // Read-only binding to the contract
	ContractYayoiFactoryTransactor // Write-only binding to the contract
	ContractYayoiFactoryFilterer   // Log filterer for contract events
}

// ContractYayoiFactoryCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractYayoiFactoryCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractYayoiFactoryTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractYayoiFactoryTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractYayoiFactoryFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractYayoiFactoryFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractYayoiFactorySession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractYayoiFactorySession struct {
	Contract     *ContractYayoiFactory // Generic contract binding to set the session for
	CallOpts     bind.CallOpts         // Call options to use throughout this session
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// ContractYayoiFactoryCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractYayoiFactoryCallerSession struct {
	Contract *ContractYayoiFactoryCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts               // Call options to use throughout this session
}

// ContractYayoiFactoryTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractYayoiFactoryTransactorSession struct {
	Contract     *ContractYayoiFactoryTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts               // Transaction auth options to use throughout this session
}

// ContractYayoiFactoryRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractYayoiFactoryRaw struct {
	Contract *ContractYayoiFactory // Generic contract binding to access the raw methods on
}

// ContractYayoiFactoryCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractYayoiFactoryCallerRaw struct {
	Contract *ContractYayoiFactoryCaller // Generic read-only contract binding to access the raw methods on
}

// ContractYayoiFactoryTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractYayoiFactoryTransactorRaw struct {
	Contract *ContractYayoiFactoryTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContractYayoiFactory creates a new instance of ContractYayoiFactory, bound to a specific deployed contract.
func NewContractYayoiFactory(address common.Address, backend bind.ContractBackend) (*ContractYayoiFactory, error) {
	contract, err := bindContractYayoiFactory(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactory{ContractYayoiFactoryCaller: ContractYayoiFactoryCaller{contract: contract}, ContractYayoiFactoryTransactor: ContractYayoiFactoryTransactor{contract: contract}, ContractYayoiFactoryFilterer: ContractYayoiFactoryFilterer{contract: contract}}, nil
}

// NewContractYayoiFactoryCaller creates a new read-only instance of ContractYayoiFactory, bound to a specific deployed contract.
func NewContractYayoiFactoryCaller(address common.Address, caller bind.ContractCaller) (*ContractYayoiFactoryCaller, error) {
	contract, err := bindContractYayoiFactory(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryCaller{contract: contract}, nil
}

// NewContractYayoiFactoryTransactor creates a new write-only instance of ContractYayoiFactory, bound to a specific deployed contract.
func NewContractYayoiFactoryTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractYayoiFactoryTransactor, error) {
	contract, err := bindContractYayoiFactory(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryTransactor{contract: contract}, nil
}

// NewContractYayoiFactoryFilterer creates a new log filterer instance of ContractYayoiFactory, bound to a specific deployed contract.
func NewContractYayoiFactoryFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractYayoiFactoryFilterer, error) {
	contract, err := bindContractYayoiFactory(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryFilterer{contract: contract}, nil
}

// bindContractYayoiFactory binds a generic wrapper to an already deployed contract.
func bindContractYayoiFactory(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractYayoiFactoryMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractYayoiFactory *ContractYayoiFactoryRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractYayoiFactory.Contract.ContractYayoiFactoryCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractYayoiFactory *ContractYayoiFactoryRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.ContractYayoiFactoryTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractYayoiFactory *ContractYayoiFactoryRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.ContractYayoiFactoryTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_ContractYayoiFactory *ContractYayoiFactoryCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _ContractYayoiFactory.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.contract.Transact(opts, method, params...)
}

// PROTOCOLFEEBPS is a free data retrieval call binding the contract method 0xbe378228.
//
// Solidity: function PROTOCOL_FEE_BPS() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) PROTOCOLFEEBPS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "PROTOCOL_FEE_BPS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// PROTOCOLFEEBPS is a free data retrieval call binding the contract method 0xbe378228.
//
// Solidity: function PROTOCOL_FEE_BPS() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactorySession) PROTOCOLFEEBPS() (*big.Int, error) {
	return _ContractYayoiFactory.Contract.PROTOCOLFEEBPS(&_ContractYayoiFactory.CallOpts)
}

// PROTOCOLFEEBPS is a free data retrieval call binding the contract method 0xbe378228.
//
// Solidity: function PROTOCOL_FEE_BPS() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) PROTOCOLFEEBPS() (*big.Int, error) {
	return _ContractYayoiFactory.Contract.PROTOCOLFEEBPS(&_ContractYayoiFactory.CallOpts)
}

// BaseAuctionDuration is a free data retrieval call binding the contract method 0x42cdddcb.
//
// Solidity: function baseAuctionDuration() view returns(uint64)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) BaseAuctionDuration(opts *bind.CallOpts) (uint64, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "baseAuctionDuration")

	if err != nil {
		return *new(uint64), err
	}

	out0 := *abi.ConvertType(out[0], new(uint64)).(*uint64)

	return out0, err

}

// BaseAuctionDuration is a free data retrieval call binding the contract method 0x42cdddcb.
//
// Solidity: function baseAuctionDuration() view returns(uint64)
func (_ContractYayoiFactory *ContractYayoiFactorySession) BaseAuctionDuration() (uint64, error) {
	return _ContractYayoiFactory.Contract.BaseAuctionDuration(&_ContractYayoiFactory.CallOpts)
}

// BaseAuctionDuration is a free data retrieval call binding the contract method 0x42cdddcb.
//
// Solidity: function baseAuctionDuration() view returns(uint64)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) BaseAuctionDuration() (uint64, error) {
	return _ContractYayoiFactory.Contract.BaseAuctionDuration(&_ContractYayoiFactory.CallOpts)
}

// BaseMinimumBidPrice is a free data retrieval call binding the contract method 0x48b7bf2d.
//
// Solidity: function baseMinimumBidPrice() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) BaseMinimumBidPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "baseMinimumBidPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BaseMinimumBidPrice is a free data retrieval call binding the contract method 0x48b7bf2d.
//
// Solidity: function baseMinimumBidPrice() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactorySession) BaseMinimumBidPrice() (*big.Int, error) {
	return _ContractYayoiFactory.Contract.BaseMinimumBidPrice(&_ContractYayoiFactory.CallOpts)
}

// BaseMinimumBidPrice is a free data retrieval call binding the contract method 0x48b7bf2d.
//
// Solidity: function baseMinimumBidPrice() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) BaseMinimumBidPrice() (*big.Int, error) {
	return _ContractYayoiFactory.Contract.BaseMinimumBidPrice(&_ContractYayoiFactory.CallOpts)
}

// CollectionImpl is a free data retrieval call binding the contract method 0x3166ef01.
//
// Solidity: function collectionImpl() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) CollectionImpl(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "collectionImpl")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// CollectionImpl is a free data retrieval call binding the contract method 0x3166ef01.
//
// Solidity: function collectionImpl() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactorySession) CollectionImpl() (common.Address, error) {
	return _ContractYayoiFactory.Contract.CollectionImpl(&_ContractYayoiFactory.CallOpts)
}

// CollectionImpl is a free data retrieval call binding the contract method 0x3166ef01.
//
// Solidity: function collectionImpl() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) CollectionImpl() (common.Address, error) {
	return _ContractYayoiFactory.Contract.CollectionImpl(&_ContractYayoiFactory.CallOpts)
}

// CreationPrice is a free data retrieval call binding the contract method 0x20488262.
//
// Solidity: function creationPrice() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) CreationPrice(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "creationPrice")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// CreationPrice is a free data retrieval call binding the contract method 0x20488262.
//
// Solidity: function creationPrice() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactorySession) CreationPrice() (*big.Int, error) {
	return _ContractYayoiFactory.Contract.CreationPrice(&_ContractYayoiFactory.CallOpts)
}

// CreationPrice is a free data retrieval call binding the contract method 0x20488262.
//
// Solidity: function creationPrice() view returns(uint256)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) CreationPrice() (*big.Int, error) {
	return _ContractYayoiFactory.Contract.CreationPrice(&_ContractYayoiFactory.CallOpts)
}

// GetCollectionFromSystemPromptUri is a free data retrieval call binding the contract method 0xbbaea210.
//
// Solidity: function getCollectionFromSystemPromptUri(string systemPromptUri) view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) GetCollectionFromSystemPromptUri(opts *bind.CallOpts, systemPromptUri string) (common.Address, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "getCollectionFromSystemPromptUri", systemPromptUri)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetCollectionFromSystemPromptUri is a free data retrieval call binding the contract method 0xbbaea210.
//
// Solidity: function getCollectionFromSystemPromptUri(string systemPromptUri) view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactorySession) GetCollectionFromSystemPromptUri(systemPromptUri string) (common.Address, error) {
	return _ContractYayoiFactory.Contract.GetCollectionFromSystemPromptUri(&_ContractYayoiFactory.CallOpts, systemPromptUri)
}

// GetCollectionFromSystemPromptUri is a free data retrieval call binding the contract method 0xbbaea210.
//
// Solidity: function getCollectionFromSystemPromptUri(string systemPromptUri) view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) GetCollectionFromSystemPromptUri(systemPromptUri string) (common.Address, error) {
	return _ContractYayoiFactory.Contract.GetCollectionFromSystemPromptUri(&_ContractYayoiFactory.CallOpts, systemPromptUri)
}

// IsAuthorizedSigner is a free data retrieval call binding the contract method 0x49045e16.
//
// Solidity: function isAuthorizedSigner(address ) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) IsAuthorizedSigner(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "isAuthorizedSigner", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAuthorizedSigner is a free data retrieval call binding the contract method 0x49045e16.
//
// Solidity: function isAuthorizedSigner(address ) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactorySession) IsAuthorizedSigner(arg0 common.Address) (bool, error) {
	return _ContractYayoiFactory.Contract.IsAuthorizedSigner(&_ContractYayoiFactory.CallOpts, arg0)
}

// IsAuthorizedSigner is a free data retrieval call binding the contract method 0x49045e16.
//
// Solidity: function isAuthorizedSigner(address ) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) IsAuthorizedSigner(arg0 common.Address) (bool, error) {
	return _ContractYayoiFactory.Contract.IsAuthorizedSigner(&_ContractYayoiFactory.CallOpts, arg0)
}

// IsRegisteredCollection is a free data retrieval call binding the contract method 0x3000186b.
//
// Solidity: function isRegisteredCollection(address collection) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) IsRegisteredCollection(opts *bind.CallOpts, collection common.Address) (bool, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "isRegisteredCollection", collection)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsRegisteredCollection is a free data retrieval call binding the contract method 0x3000186b.
//
// Solidity: function isRegisteredCollection(address collection) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactorySession) IsRegisteredCollection(collection common.Address) (bool, error) {
	return _ContractYayoiFactory.Contract.IsRegisteredCollection(&_ContractYayoiFactory.CallOpts, collection)
}

// IsRegisteredCollection is a free data retrieval call binding the contract method 0x3000186b.
//
// Solidity: function isRegisteredCollection(address collection) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) IsRegisteredCollection(collection common.Address) (bool, error) {
	return _ContractYayoiFactory.Contract.IsRegisteredCollection(&_ContractYayoiFactory.CallOpts, collection)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactorySession) Owner() (common.Address, error) {
	return _ContractYayoiFactory.Contract.Owner(&_ContractYayoiFactory.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) Owner() (common.Address, error) {
	return _ContractYayoiFactory.Contract.Owner(&_ContractYayoiFactory.CallOpts)
}

// PaymentToken is a free data retrieval call binding the contract method 0x3013ce29.
//
// Solidity: function paymentToken() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) PaymentToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "paymentToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PaymentToken is a free data retrieval call binding the contract method 0x3013ce29.
//
// Solidity: function paymentToken() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactorySession) PaymentToken() (common.Address, error) {
	return _ContractYayoiFactory.Contract.PaymentToken(&_ContractYayoiFactory.CallOpts)
}

// PaymentToken is a free data retrieval call binding the contract method 0x3013ce29.
//
// Solidity: function paymentToken() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) PaymentToken() (common.Address, error) {
	return _ContractYayoiFactory.Contract.PaymentToken(&_ContractYayoiFactory.CallOpts)
}

// ProtocolFeeDestination is a free data retrieval call binding the contract method 0x4ce7957c.
//
// Solidity: function protocolFeeDestination() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) ProtocolFeeDestination(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "protocolFeeDestination")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ProtocolFeeDestination is a free data retrieval call binding the contract method 0x4ce7957c.
//
// Solidity: function protocolFeeDestination() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactorySession) ProtocolFeeDestination() (common.Address, error) {
	return _ContractYayoiFactory.Contract.ProtocolFeeDestination(&_ContractYayoiFactory.CallOpts)
}

// ProtocolFeeDestination is a free data retrieval call binding the contract method 0x4ce7957c.
//
// Solidity: function protocolFeeDestination() view returns(address)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) ProtocolFeeDestination() (common.Address, error) {
	return _ContractYayoiFactory.Contract.ProtocolFeeDestination(&_ContractYayoiFactory.CallOpts)
}

// RegisteredCollections is a free data retrieval call binding the contract method 0x0d8264c1.
//
// Solidity: function registeredCollections(address ) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactoryCaller) RegisteredCollections(opts *bind.CallOpts, arg0 common.Address) (bool, error) {
	var out []interface{}
	err := _ContractYayoiFactory.contract.Call(opts, &out, "registeredCollections", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// RegisteredCollections is a free data retrieval call binding the contract method 0x0d8264c1.
//
// Solidity: function registeredCollections(address ) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactorySession) RegisteredCollections(arg0 common.Address) (bool, error) {
	return _ContractYayoiFactory.Contract.RegisteredCollections(&_ContractYayoiFactory.CallOpts, arg0)
}

// RegisteredCollections is a free data retrieval call binding the contract method 0x0d8264c1.
//
// Solidity: function registeredCollections(address ) view returns(bool)
func (_ContractYayoiFactory *ContractYayoiFactoryCallerSession) RegisteredCollections(arg0 common.Address) (bool, error) {
	return _ContractYayoiFactory.Contract.RegisteredCollections(&_ContractYayoiFactory.CallOpts, arg0)
}

// CreateCollection is a paid mutator transaction binding the contract method 0x7eedf4d0.
//
// Solidity: function createCollection((string,string,string,address,uint256,uint64) params) payable returns(address collection)
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) CreateCollection(opts *bind.TransactOpts, params YayoiFactoryCreateCollectionParams) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "createCollection", params)
}

// CreateCollection is a paid mutator transaction binding the contract method 0x7eedf4d0.
//
// Solidity: function createCollection((string,string,string,address,uint256,uint64) params) payable returns(address collection)
func (_ContractYayoiFactory *ContractYayoiFactorySession) CreateCollection(params YayoiFactoryCreateCollectionParams) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.CreateCollection(&_ContractYayoiFactory.TransactOpts, params)
}

// CreateCollection is a paid mutator transaction binding the contract method 0x7eedf4d0.
//
// Solidity: function createCollection((string,string,string,address,uint256,uint64) params) payable returns(address collection)
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) CreateCollection(params YayoiFactoryCreateCollectionParams) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.CreateCollection(&_ContractYayoiFactory.TransactOpts, params)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.RenounceOwnership(&_ContractYayoiFactory.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.RenounceOwnership(&_ContractYayoiFactory.TransactOpts)
}

// SetBaseAuctionDuration is a paid mutator transaction binding the contract method 0xe1456c62.
//
// Solidity: function setBaseAuctionDuration(uint64 duration) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SetBaseAuctionDuration(opts *bind.TransactOpts, duration uint64) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "setBaseAuctionDuration", duration)
}

// SetBaseAuctionDuration is a paid mutator transaction binding the contract method 0xe1456c62.
//
// Solidity: function setBaseAuctionDuration(uint64 duration) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SetBaseAuctionDuration(duration uint64) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetBaseAuctionDuration(&_ContractYayoiFactory.TransactOpts, duration)
}

// SetBaseAuctionDuration is a paid mutator transaction binding the contract method 0xe1456c62.
//
// Solidity: function setBaseAuctionDuration(uint64 duration) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SetBaseAuctionDuration(duration uint64) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetBaseAuctionDuration(&_ContractYayoiFactory.TransactOpts, duration)
}

// SetBaseMinimumBidPrice is a paid mutator transaction binding the contract method 0x176d6426.
//
// Solidity: function setBaseMinimumBidPrice(uint256 price) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SetBaseMinimumBidPrice(opts *bind.TransactOpts, price *big.Int) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "setBaseMinimumBidPrice", price)
}

// SetBaseMinimumBidPrice is a paid mutator transaction binding the contract method 0x176d6426.
//
// Solidity: function setBaseMinimumBidPrice(uint256 price) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SetBaseMinimumBidPrice(price *big.Int) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetBaseMinimumBidPrice(&_ContractYayoiFactory.TransactOpts, price)
}

// SetBaseMinimumBidPrice is a paid mutator transaction binding the contract method 0x176d6426.
//
// Solidity: function setBaseMinimumBidPrice(uint256 price) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SetBaseMinimumBidPrice(price *big.Int) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetBaseMinimumBidPrice(&_ContractYayoiFactory.TransactOpts, price)
}

// SetCreationPrice is a paid mutator transaction binding the contract method 0xa9831437.
//
// Solidity: function setCreationPrice(uint256 price) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SetCreationPrice(opts *bind.TransactOpts, price *big.Int) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "setCreationPrice", price)
}

// SetCreationPrice is a paid mutator transaction binding the contract method 0xa9831437.
//
// Solidity: function setCreationPrice(uint256 price) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SetCreationPrice(price *big.Int) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetCreationPrice(&_ContractYayoiFactory.TransactOpts, price)
}

// SetCreationPrice is a paid mutator transaction binding the contract method 0xa9831437.
//
// Solidity: function setCreationPrice(uint256 price) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SetCreationPrice(price *big.Int) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetCreationPrice(&_ContractYayoiFactory.TransactOpts, price)
}

// SetImplementation is a paid mutator transaction binding the contract method 0xd784d426.
//
// Solidity: function setImplementation(address _implementation) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SetImplementation(opts *bind.TransactOpts, _implementation common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "setImplementation", _implementation)
}

// SetImplementation is a paid mutator transaction binding the contract method 0xd784d426.
//
// Solidity: function setImplementation(address _implementation) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SetImplementation(_implementation common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetImplementation(&_ContractYayoiFactory.TransactOpts, _implementation)
}

// SetImplementation is a paid mutator transaction binding the contract method 0xd784d426.
//
// Solidity: function setImplementation(address _implementation) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SetImplementation(_implementation common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetImplementation(&_ContractYayoiFactory.TransactOpts, _implementation)
}

// SetPaymentToken is a paid mutator transaction binding the contract method 0x6a326ab1.
//
// Solidity: function setPaymentToken(address token) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SetPaymentToken(opts *bind.TransactOpts, token common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "setPaymentToken", token)
}

// SetPaymentToken is a paid mutator transaction binding the contract method 0x6a326ab1.
//
// Solidity: function setPaymentToken(address token) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SetPaymentToken(token common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetPaymentToken(&_ContractYayoiFactory.TransactOpts, token)
}

// SetPaymentToken is a paid mutator transaction binding the contract method 0x6a326ab1.
//
// Solidity: function setPaymentToken(address token) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SetPaymentToken(token common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetPaymentToken(&_ContractYayoiFactory.TransactOpts, token)
}

// SetProtocolFeeDestination is a paid mutator transaction binding the contract method 0xa10786b0.
//
// Solidity: function setProtocolFeeDestination(address destination) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SetProtocolFeeDestination(opts *bind.TransactOpts, destination common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "setProtocolFeeDestination", destination)
}

// SetProtocolFeeDestination is a paid mutator transaction binding the contract method 0xa10786b0.
//
// Solidity: function setProtocolFeeDestination(address destination) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SetProtocolFeeDestination(destination common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetProtocolFeeDestination(&_ContractYayoiFactory.TransactOpts, destination)
}

// SetProtocolFeeDestination is a paid mutator transaction binding the contract method 0xa10786b0.
//
// Solidity: function setProtocolFeeDestination(address destination) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SetProtocolFeeDestination(destination common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SetProtocolFeeDestination(&_ContractYayoiFactory.TransactOpts, destination)
}

// SweepTokens is a paid mutator transaction binding the contract method 0xf5f6d3af.
//
// Solidity: function sweepTokens(address token) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) SweepTokens(opts *bind.TransactOpts, token common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "sweepTokens", token)
}

// SweepTokens is a paid mutator transaction binding the contract method 0xf5f6d3af.
//
// Solidity: function sweepTokens(address token) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) SweepTokens(token common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SweepTokens(&_ContractYayoiFactory.TransactOpts, token)
}

// SweepTokens is a paid mutator transaction binding the contract method 0xf5f6d3af.
//
// Solidity: function sweepTokens(address token) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) SweepTokens(token common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.SweepTokens(&_ContractYayoiFactory.TransactOpts, token)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.TransferOwnership(&_ContractYayoiFactory.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.TransferOwnership(&_ContractYayoiFactory.TransactOpts, newOwner)
}

// UpdateAuthorizedSigner is a paid mutator transaction binding the contract method 0x82413546.
//
// Solidity: function updateAuthorizedSigner(address signer, bool authorized) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) UpdateAuthorizedSigner(opts *bind.TransactOpts, signer common.Address, authorized bool) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.Transact(opts, "updateAuthorizedSigner", signer, authorized)
}

// UpdateAuthorizedSigner is a paid mutator transaction binding the contract method 0x82413546.
//
// Solidity: function updateAuthorizedSigner(address signer, bool authorized) returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) UpdateAuthorizedSigner(signer common.Address, authorized bool) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.UpdateAuthorizedSigner(&_ContractYayoiFactory.TransactOpts, signer, authorized)
}

// UpdateAuthorizedSigner is a paid mutator transaction binding the contract method 0x82413546.
//
// Solidity: function updateAuthorizedSigner(address signer, bool authorized) returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) UpdateAuthorizedSigner(signer common.Address, authorized bool) (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.UpdateAuthorizedSigner(&_ContractYayoiFactory.TransactOpts, signer, authorized)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactor) Receive(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _ContractYayoiFactory.contract.RawTransact(opts, nil) // calldata is disallowed for receive function
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_ContractYayoiFactory *ContractYayoiFactorySession) Receive() (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.Receive(&_ContractYayoiFactory.TransactOpts)
}

// Receive is a paid mutator transaction binding the contract receive function.
//
// Solidity: receive() payable returns()
func (_ContractYayoiFactory *ContractYayoiFactoryTransactorSession) Receive() (*types.Transaction, error) {
	return _ContractYayoiFactory.Contract.Receive(&_ContractYayoiFactory.TransactOpts)
}

// ContractYayoiFactoryAuthorizedSignerUpdatedIterator is returned from FilterAuthorizedSignerUpdated and is used to iterate over the raw logs and unpacked data for AuthorizedSignerUpdated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryAuthorizedSignerUpdatedIterator struct {
	Event *ContractYayoiFactoryAuthorizedSignerUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryAuthorizedSignerUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryAuthorizedSignerUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryAuthorizedSignerUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryAuthorizedSignerUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryAuthorizedSignerUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryAuthorizedSignerUpdated represents a AuthorizedSignerUpdated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryAuthorizedSignerUpdated struct {
	Signer       common.Address
	IsAuthorized bool
	Raw          types.Log // Blockchain specific contextual infos
}

// FilterAuthorizedSignerUpdated is a free log retrieval operation binding the contract event 0xfc434b0362aed83a09eb9c1e156519bbaa55c1a15933f661daad7a1394360472.
//
// Solidity: event AuthorizedSignerUpdated(address indexed signer, bool isAuthorized)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterAuthorizedSignerUpdated(opts *bind.FilterOpts, signer []common.Address) (*ContractYayoiFactoryAuthorizedSignerUpdatedIterator, error) {

	var signerRule []interface{}
	for _, signerItem := range signer {
		signerRule = append(signerRule, signerItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "AuthorizedSignerUpdated", signerRule)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryAuthorizedSignerUpdatedIterator{contract: _ContractYayoiFactory.contract, event: "AuthorizedSignerUpdated", logs: logs, sub: sub}, nil
}

// WatchAuthorizedSignerUpdated is a free log subscription operation binding the contract event 0xfc434b0362aed83a09eb9c1e156519bbaa55c1a15933f661daad7a1394360472.
//
// Solidity: event AuthorizedSignerUpdated(address indexed signer, bool isAuthorized)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchAuthorizedSignerUpdated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryAuthorizedSignerUpdated, signer []common.Address) (event.Subscription, error) {

	var signerRule []interface{}
	for _, signerItem := range signer {
		signerRule = append(signerRule, signerItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "AuthorizedSignerUpdated", signerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryAuthorizedSignerUpdated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "AuthorizedSignerUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAuthorizedSignerUpdated is a log parse operation binding the contract event 0xfc434b0362aed83a09eb9c1e156519bbaa55c1a15933f661daad7a1394360472.
//
// Solidity: event AuthorizedSignerUpdated(address indexed signer, bool isAuthorized)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseAuthorizedSignerUpdated(log types.Log) (*ContractYayoiFactoryAuthorizedSignerUpdated, error) {
	event := new(ContractYayoiFactoryAuthorizedSignerUpdated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "AuthorizedSignerUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryBaseAuctionDurationUpdatedIterator is returned from FilterBaseAuctionDurationUpdated and is used to iterate over the raw logs and unpacked data for BaseAuctionDurationUpdated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryBaseAuctionDurationUpdatedIterator struct {
	Event *ContractYayoiFactoryBaseAuctionDurationUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryBaseAuctionDurationUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryBaseAuctionDurationUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryBaseAuctionDurationUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryBaseAuctionDurationUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryBaseAuctionDurationUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryBaseAuctionDurationUpdated represents a BaseAuctionDurationUpdated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryBaseAuctionDurationUpdated struct {
	Duration uint64
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterBaseAuctionDurationUpdated is a free log retrieval operation binding the contract event 0x56e16330d5194504fc5302c7809ed5e01f2da45dfea33ce0f9895356c0d73614.
//
// Solidity: event BaseAuctionDurationUpdated(uint64 duration)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterBaseAuctionDurationUpdated(opts *bind.FilterOpts) (*ContractYayoiFactoryBaseAuctionDurationUpdatedIterator, error) {

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "BaseAuctionDurationUpdated")
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryBaseAuctionDurationUpdatedIterator{contract: _ContractYayoiFactory.contract, event: "BaseAuctionDurationUpdated", logs: logs, sub: sub}, nil
}

// WatchBaseAuctionDurationUpdated is a free log subscription operation binding the contract event 0x56e16330d5194504fc5302c7809ed5e01f2da45dfea33ce0f9895356c0d73614.
//
// Solidity: event BaseAuctionDurationUpdated(uint64 duration)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchBaseAuctionDurationUpdated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryBaseAuctionDurationUpdated) (event.Subscription, error) {

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "BaseAuctionDurationUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryBaseAuctionDurationUpdated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "BaseAuctionDurationUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBaseAuctionDurationUpdated is a log parse operation binding the contract event 0x56e16330d5194504fc5302c7809ed5e01f2da45dfea33ce0f9895356c0d73614.
//
// Solidity: event BaseAuctionDurationUpdated(uint64 duration)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseBaseAuctionDurationUpdated(log types.Log) (*ContractYayoiFactoryBaseAuctionDurationUpdated, error) {
	event := new(ContractYayoiFactoryBaseAuctionDurationUpdated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "BaseAuctionDurationUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator is returned from FilterBaseMinimumBidPriceUpdated and is used to iterate over the raw logs and unpacked data for BaseMinimumBidPriceUpdated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator struct {
	Event *ContractYayoiFactoryBaseMinimumBidPriceUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryBaseMinimumBidPriceUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryBaseMinimumBidPriceUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryBaseMinimumBidPriceUpdated represents a BaseMinimumBidPriceUpdated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryBaseMinimumBidPriceUpdated struct {
	Price *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterBaseMinimumBidPriceUpdated is a free log retrieval operation binding the contract event 0x4a19594c5bed17b3f8f257b7692c14d958a042cb947d6319bc1856b5d1cefb26.
//
// Solidity: event BaseMinimumBidPriceUpdated(uint256 price)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterBaseMinimumBidPriceUpdated(opts *bind.FilterOpts) (*ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator, error) {

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "BaseMinimumBidPriceUpdated")
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryBaseMinimumBidPriceUpdatedIterator{contract: _ContractYayoiFactory.contract, event: "BaseMinimumBidPriceUpdated", logs: logs, sub: sub}, nil
}

// WatchBaseMinimumBidPriceUpdated is a free log subscription operation binding the contract event 0x4a19594c5bed17b3f8f257b7692c14d958a042cb947d6319bc1856b5d1cefb26.
//
// Solidity: event BaseMinimumBidPriceUpdated(uint256 price)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchBaseMinimumBidPriceUpdated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryBaseMinimumBidPriceUpdated) (event.Subscription, error) {

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "BaseMinimumBidPriceUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryBaseMinimumBidPriceUpdated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "BaseMinimumBidPriceUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseBaseMinimumBidPriceUpdated is a log parse operation binding the contract event 0x4a19594c5bed17b3f8f257b7692c14d958a042cb947d6319bc1856b5d1cefb26.
//
// Solidity: event BaseMinimumBidPriceUpdated(uint256 price)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseBaseMinimumBidPriceUpdated(log types.Log) (*ContractYayoiFactoryBaseMinimumBidPriceUpdated, error) {
	event := new(ContractYayoiFactoryBaseMinimumBidPriceUpdated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "BaseMinimumBidPriceUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryCollectionCreatedIterator is returned from FilterCollectionCreated and is used to iterate over the raw logs and unpacked data for CollectionCreated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryCollectionCreatedIterator struct {
	Event *ContractYayoiFactoryCollectionCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryCollectionCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryCollectionCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryCollectionCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryCollectionCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryCollectionCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryCollectionCreated represents a CollectionCreated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryCollectionCreated struct {
	Collection common.Address
	Owner      common.Address
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterCollectionCreated is a free log retrieval operation binding the contract event 0x5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c7.
//
// Solidity: event CollectionCreated(address indexed collection, address indexed owner)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterCollectionCreated(opts *bind.FilterOpts, collection []common.Address, owner []common.Address) (*ContractYayoiFactoryCollectionCreatedIterator, error) {

	var collectionRule []interface{}
	for _, collectionItem := range collection {
		collectionRule = append(collectionRule, collectionItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "CollectionCreated", collectionRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryCollectionCreatedIterator{contract: _ContractYayoiFactory.contract, event: "CollectionCreated", logs: logs, sub: sub}, nil
}

// WatchCollectionCreated is a free log subscription operation binding the contract event 0x5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c7.
//
// Solidity: event CollectionCreated(address indexed collection, address indexed owner)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchCollectionCreated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryCollectionCreated, collection []common.Address, owner []common.Address) (event.Subscription, error) {

	var collectionRule []interface{}
	for _, collectionItem := range collection {
		collectionRule = append(collectionRule, collectionItem)
	}
	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "CollectionCreated", collectionRule, ownerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryCollectionCreated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "CollectionCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCollectionCreated is a log parse operation binding the contract event 0x5d0de243db1669e3a7056744cd715c625f0c1c348736c2c2d53d0ddebff1a6c7.
//
// Solidity: event CollectionCreated(address indexed collection, address indexed owner)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseCollectionCreated(log types.Log) (*ContractYayoiFactoryCollectionCreated, error) {
	event := new(ContractYayoiFactoryCollectionCreated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "CollectionCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryCreationPriceUpdatedIterator is returned from FilterCreationPriceUpdated and is used to iterate over the raw logs and unpacked data for CreationPriceUpdated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryCreationPriceUpdatedIterator struct {
	Event *ContractYayoiFactoryCreationPriceUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryCreationPriceUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryCreationPriceUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryCreationPriceUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryCreationPriceUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryCreationPriceUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryCreationPriceUpdated represents a CreationPriceUpdated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryCreationPriceUpdated struct {
	Price *big.Int
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterCreationPriceUpdated is a free log retrieval operation binding the contract event 0x3f961fcadef1ec878b072f0c7a89254eaf10e83b27750595b267d4285f619667.
//
// Solidity: event CreationPriceUpdated(uint256 price)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterCreationPriceUpdated(opts *bind.FilterOpts) (*ContractYayoiFactoryCreationPriceUpdatedIterator, error) {

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "CreationPriceUpdated")
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryCreationPriceUpdatedIterator{contract: _ContractYayoiFactory.contract, event: "CreationPriceUpdated", logs: logs, sub: sub}, nil
}

// WatchCreationPriceUpdated is a free log subscription operation binding the contract event 0x3f961fcadef1ec878b072f0c7a89254eaf10e83b27750595b267d4285f619667.
//
// Solidity: event CreationPriceUpdated(uint256 price)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchCreationPriceUpdated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryCreationPriceUpdated) (event.Subscription, error) {

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "CreationPriceUpdated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryCreationPriceUpdated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "CreationPriceUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseCreationPriceUpdated is a log parse operation binding the contract event 0x3f961fcadef1ec878b072f0c7a89254eaf10e83b27750595b267d4285f619667.
//
// Solidity: event CreationPriceUpdated(uint256 price)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseCreationPriceUpdated(log types.Log) (*ContractYayoiFactoryCreationPriceUpdated, error) {
	event := new(ContractYayoiFactoryCreationPriceUpdated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "CreationPriceUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryOwnershipTransferredIterator struct {
	Event *ContractYayoiFactoryOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryOwnershipTransferred represents a OwnershipTransferred event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractYayoiFactoryOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryOwnershipTransferredIterator{contract: _ContractYayoiFactory.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryOwnershipTransferred)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseOwnershipTransferred(log types.Log) (*ContractYayoiFactoryOwnershipTransferred, error) {
	event := new(ContractYayoiFactoryOwnershipTransferred)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryPaymentTokenUpdatedIterator is returned from FilterPaymentTokenUpdated and is used to iterate over the raw logs and unpacked data for PaymentTokenUpdated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryPaymentTokenUpdatedIterator struct {
	Event *ContractYayoiFactoryPaymentTokenUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryPaymentTokenUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryPaymentTokenUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryPaymentTokenUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryPaymentTokenUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryPaymentTokenUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryPaymentTokenUpdated represents a PaymentTokenUpdated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryPaymentTokenUpdated struct {
	Token common.Address
	Raw   types.Log // Blockchain specific contextual infos
}

// FilterPaymentTokenUpdated is a free log retrieval operation binding the contract event 0xbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913.
//
// Solidity: event PaymentTokenUpdated(address indexed token)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterPaymentTokenUpdated(opts *bind.FilterOpts, token []common.Address) (*ContractYayoiFactoryPaymentTokenUpdatedIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "PaymentTokenUpdated", tokenRule)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryPaymentTokenUpdatedIterator{contract: _ContractYayoiFactory.contract, event: "PaymentTokenUpdated", logs: logs, sub: sub}, nil
}

// WatchPaymentTokenUpdated is a free log subscription operation binding the contract event 0xbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913.
//
// Solidity: event PaymentTokenUpdated(address indexed token)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchPaymentTokenUpdated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryPaymentTokenUpdated, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "PaymentTokenUpdated", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryPaymentTokenUpdated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "PaymentTokenUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaymentTokenUpdated is a log parse operation binding the contract event 0xbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913.
//
// Solidity: event PaymentTokenUpdated(address indexed token)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParsePaymentTokenUpdated(log types.Log) (*ContractYayoiFactoryPaymentTokenUpdated, error) {
	event := new(ContractYayoiFactoryPaymentTokenUpdated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "PaymentTokenUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator is returned from FilterProtocolFeeDestinationUpdated and is used to iterate over the raw logs and unpacked data for ProtocolFeeDestinationUpdated events raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator struct {
	Event *ContractYayoiFactoryProtocolFeeDestinationUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactoryProtocolFeeDestinationUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactoryProtocolFeeDestinationUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactoryProtocolFeeDestinationUpdated represents a ProtocolFeeDestinationUpdated event raised by the ContractYayoiFactory contract.
type ContractYayoiFactoryProtocolFeeDestinationUpdated struct {
	Destination common.Address
	Raw         types.Log // Blockchain specific contextual infos
}

// FilterProtocolFeeDestinationUpdated is a free log retrieval operation binding the contract event 0x4907155279818c6a4cc7f8cd1dfc9ddd3d180b957ddd9ca2838c3fb3dc4cedb4.
//
// Solidity: event ProtocolFeeDestinationUpdated(address indexed destination)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterProtocolFeeDestinationUpdated(opts *bind.FilterOpts, destination []common.Address) (*ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator, error) {

	var destinationRule []interface{}
	for _, destinationItem := range destination {
		destinationRule = append(destinationRule, destinationItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "ProtocolFeeDestinationUpdated", destinationRule)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactoryProtocolFeeDestinationUpdatedIterator{contract: _ContractYayoiFactory.contract, event: "ProtocolFeeDestinationUpdated", logs: logs, sub: sub}, nil
}

// WatchProtocolFeeDestinationUpdated is a free log subscription operation binding the contract event 0x4907155279818c6a4cc7f8cd1dfc9ddd3d180b957ddd9ca2838c3fb3dc4cedb4.
//
// Solidity: event ProtocolFeeDestinationUpdated(address indexed destination)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchProtocolFeeDestinationUpdated(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactoryProtocolFeeDestinationUpdated, destination []common.Address) (event.Subscription, error) {

	var destinationRule []interface{}
	for _, destinationItem := range destination {
		destinationRule = append(destinationRule, destinationItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "ProtocolFeeDestinationUpdated", destinationRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactoryProtocolFeeDestinationUpdated)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "ProtocolFeeDestinationUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseProtocolFeeDestinationUpdated is a log parse operation binding the contract event 0x4907155279818c6a4cc7f8cd1dfc9ddd3d180b957ddd9ca2838c3fb3dc4cedb4.
//
// Solidity: event ProtocolFeeDestinationUpdated(address indexed destination)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseProtocolFeeDestinationUpdated(log types.Log) (*ContractYayoiFactoryProtocolFeeDestinationUpdated, error) {
	event := new(ContractYayoiFactoryProtocolFeeDestinationUpdated)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "ProtocolFeeDestinationUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractYayoiFactorySystemPromptUriHashRegisteredIterator is returned from FilterSystemPromptUriHashRegistered and is used to iterate over the raw logs and unpacked data for SystemPromptUriHashRegistered events raised by the ContractYayoiFactory contract.
type ContractYayoiFactorySystemPromptUriHashRegisteredIterator struct {
	Event *ContractYayoiFactorySystemPromptUriHashRegistered // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractYayoiFactorySystemPromptUriHashRegisteredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractYayoiFactorySystemPromptUriHashRegistered)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractYayoiFactorySystemPromptUriHashRegistered)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractYayoiFactorySystemPromptUriHashRegisteredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractYayoiFactorySystemPromptUriHashRegisteredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractYayoiFactorySystemPromptUriHashRegistered represents a SystemPromptUriHashRegistered event raised by the ContractYayoiFactory contract.
type ContractYayoiFactorySystemPromptUriHashRegistered struct {
	PromptUriHash [32]byte
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterSystemPromptUriHashRegistered is a free log retrieval operation binding the contract event 0x3511b8bedb716f06a6b40174e94aeb51a2910ff858d171a151c6569095ca3477.
//
// Solidity: event SystemPromptUriHashRegistered(bytes32 indexed promptUriHash)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) FilterSystemPromptUriHashRegistered(opts *bind.FilterOpts, promptUriHash [][32]byte) (*ContractYayoiFactorySystemPromptUriHashRegisteredIterator, error) {

	var promptUriHashRule []interface{}
	for _, promptUriHashItem := range promptUriHash {
		promptUriHashRule = append(promptUriHashRule, promptUriHashItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.FilterLogs(opts, "SystemPromptUriHashRegistered", promptUriHashRule)
	if err != nil {
		return nil, err
	}
	return &ContractYayoiFactorySystemPromptUriHashRegisteredIterator{contract: _ContractYayoiFactory.contract, event: "SystemPromptUriHashRegistered", logs: logs, sub: sub}, nil
}

// WatchSystemPromptUriHashRegistered is a free log subscription operation binding the contract event 0x3511b8bedb716f06a6b40174e94aeb51a2910ff858d171a151c6569095ca3477.
//
// Solidity: event SystemPromptUriHashRegistered(bytes32 indexed promptUriHash)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) WatchSystemPromptUriHashRegistered(opts *bind.WatchOpts, sink chan<- *ContractYayoiFactorySystemPromptUriHashRegistered, promptUriHash [][32]byte) (event.Subscription, error) {

	var promptUriHashRule []interface{}
	for _, promptUriHashItem := range promptUriHash {
		promptUriHashRule = append(promptUriHashRule, promptUriHashItem)
	}

	logs, sub, err := _ContractYayoiFactory.contract.WatchLogs(opts, "SystemPromptUriHashRegistered", promptUriHashRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractYayoiFactorySystemPromptUriHashRegistered)
				if err := _ContractYayoiFactory.contract.UnpackLog(event, "SystemPromptUriHashRegistered", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSystemPromptUriHashRegistered is a log parse operation binding the contract event 0x3511b8bedb716f06a6b40174e94aeb51a2910ff858d171a151c6569095ca3477.
//
// Solidity: event SystemPromptUriHashRegistered(bytes32 indexed promptUriHash)
func (_ContractYayoiFactory *ContractYayoiFactoryFilterer) ParseSystemPromptUriHashRegistered(log types.Log) (*ContractYayoiFactorySystemPromptUriHashRegistered, error) {
	event := new(ContractYayoiFactorySystemPromptUriHashRegistered)
	if err := _ContractYayoiFactory.contract.UnpackLog(event, "SystemPromptUriHashRegistered", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
